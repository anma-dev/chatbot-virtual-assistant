import { h } from "@stencil/core";
export class Input {
    constructor() {
        this.textEmpty = true;
    }
    handleTextChange(event) {
        this.textEmpty = event.detail.value === '';
    }
    handleEnter(event) {
        if (event.key != 'Enter') {
            return;
        }
        event.preventDefault();
        if (event.ctrlKey) {
            this.textarea.value += '\n';
            return;
        }
        this.handleSend();
    }
    handleSend(event) {
        if (event) {
            event.preventDefault();
        }
        this.send.emit({ value: this.textarea.value });
        this.textarea.value = '';
        this.textarea.focus();
    }
    render() {
        const button = this.textEmpty ?
            h("ion-icon", { name: "mic" })
            :
                h("ion-icon", { name: "send", onMouseDown: event => this.handleSend(event) });
        return (h("ion-item", null,
            h("ion-textarea", { placeholder: "Type a message", ref: element => this.textarea = element, onIonChange: event => this.handleTextChange(event), onKeyDown: event => this.handleEnter(event) }),
            button));
    }
    static get is() { return "chat-input"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["input.css"]
    }; }
    static get styleUrls() { return {
        "$": ["input.css"]
    }; }
    static get states() { return {
        "textEmpty": {}
    }; }
    static get events() { return [{
            "method": "send",
            "name": "send",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "AssisterInputChangeEventDetail",
                "resolved": "AssisterInputChangeEventDetail",
                "references": {
                    "AssisterInputChangeEventDetail": {
                        "location": "import",
                        "path": "../../interfaces"
                    }
                }
            }
        }]; }
}
