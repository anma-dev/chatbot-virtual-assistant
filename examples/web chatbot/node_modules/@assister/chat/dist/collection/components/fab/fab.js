import { h } from "@stencil/core";
export class Fab {
    constructor() {
        this.ionicon = "code-working";
        this.showApp = true;
    }
    async close() {
        this.showApp = false;
    }
    handleClick() {
        this.showApp = !this.showApp;
    }
    render() {
        return [
            h("ion-fab-button", { class: "fab", onClick: this.handleClick.bind(this) },
                h("ion-icon", { name: this.ionicon })),
            h("style", null,
                "::slotted(:first-child) ",
                '{',
                "display: ",
                this.showApp ? 'block' : 'none',
                ";",
                '}'),
            h("slot", null)
        ];
    }
    static get is() { return "fab-app"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["fab.css"]
    }; }
    static get styleUrls() { return {
        "$": ["fab.css"]
    }; }
    static get properties() { return {
        "ionicon": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "ionicon",
            "reflect": false,
            "defaultValue": "\"code-working\""
        }
    }; }
    static get states() { return {
        "showApp": {}
    }; }
    static get methods() { return {
        "close": {
            "complexType": {
                "signature": "() => Promise<void>",
                "parameters": [],
                "references": {
                    "Promise": {
                        "location": "global"
                    }
                },
                "return": "Promise<void>"
            },
            "docs": {
                "text": "",
                "tags": []
            }
        }
    }; }
}
