version: '3.0'

## Docker compose main file

services:

  ##  Rasa Core main Container for PROD , This is an image downloaded from dockerhub , local files are mapped.

  rasa_core:
    image: rasa/rasa_core:latest
    ports:
      - 5005:5005
    volumes:
      - ./vol_chatbot_data/rasa/100/models/core:/app/models
      - ./vol_chatbot_data/rasa/100/config:/app/config
    command:
      - start
      - --core
      - models
      - -c
      - rest
      - --endpoints
      - config/endpoints.yml
      - -u
      - current/

  ## Rasa NLU image from Dockerhub , linked with the volume via bind mount

  rasa_nlu:
    image: rasa/rasa_nlu:latest-tensorflow
    ports:
      - "5000:5000"
    volumes:
      - ./vol_chatbot_data/rasa/100/models/nlu:/app/models
      - ./vol_chatbot_data/rasa/100/config:/app/config
    command:
      - start
      - --path
      - models
      - -c
      - config/nlu_config.yml


  ##  Rasa core actions server from dockerhub linked to local bind mount

  action_server:
    image: rasa/rasa_core_sdk:latest
    ports:
      - "5055:5055"
    volumes:
      - ./vol_chatbot_data/rasa/100/actions:/app/actions

  ## Redis conatiner for session manaegement for chatbot

  redis:
    image: redis:latest

  ## starting container for Angular Rasa Trainer

## Issue with launching this container hence committed
  ui_trainer:
    container_name: ui-trainer
    build: './ui-trainer'
    ports:
      - "8080:80"

  ## Skype master container , it connects to Azure and starts skype channel

  skype:
    build: './con-skype-master'
    volumes:
      - skype_keys_vol:/data
    environment:
      PYTHONUNBUFFERED: 1

  ## Skype Events processor Processes any incomming events

  skype_events:
    build: './con-skype-events'
    depends_on:
      - skype
      - kafka
      - zookeeper
    volumes:
      - skype_keys_vol:/data
    environment:
      PYTHONUNBUFFERED: 1

  ## Skype send message this one sends outbound messages

  skype_send_msg:
    build: './con-skype-message'
    depends_on:
      - skype
      - kafka
      - zookeeper
    volumes:
      - skype_keys_vol:/data
    environment:
      PYTHONUNBUFFERED: 1

  ## Zookeper instance

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ## Kafka instance

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ## Mongo DB Instance

  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGODB_USER="eva"
      - MONGODB_PASS="evapass"
    volumes:
      - ./vol_chatbot_data/database/db:/data/db
    ports:
      - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null # --quiet

  api_backend:
    container_name: api_backend
    build: './old-api-backend'
    ports:
      - "8081:8081"

volumes:
  skype_keys_vol: